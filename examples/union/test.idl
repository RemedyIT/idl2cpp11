/*!
 * @file   test.idl
 * @author
 *
 * @brief  CORBA C++11 test idl
 *
 * @copyright Copyright (c) Remedy IT Expertise BV
 * Chamber of commerce Rotterdam nr.276339, The Netherlands
 */

/// Put the interfaces in a module, to avoid global namespace pollution

struct Global
{
  long x;
};

module Test
{
  enum DataType
  {
    dtEmpty,
    dtLong,
    dtShort,
    dtString,
    dtPoint,
    dtTrack,
    dtGlobal
  };

  struct Point
  {
    long x;
    long y;
  };

  struct Track
  {
    long id;
    Point p;
  };

  union Data switch (DataType)
    {
      case dtLong: long longData;
      case dtShort: short shortData;
      case dtString: string stringData;
      case dtPoint: Point pointData;
      case dtTrack: Track trackData;
      case dtGlobal: Global globalData;
      // by default (implicit), empty union
    };

  struct S
  {
    long len;
  };
  interface A;
  union U switch (long) {
    case 1: long x;
    case 2: string z;
    case 3:
    case 4: S w;
    default: A obj;
  };

  /// A very simple interface
  interface Foo
  {
    boolean pass_union (in Data s);

    Data return_union ();

    boolean get_union (out Data s);

    boolean update_union (inout Data s);

    /// A method to shutdown the ORB
    /**
     * This method is used to simplify the test shutdown process
     */
    oneway void shutdown ();
  };

  interface A
  {
  };
};
